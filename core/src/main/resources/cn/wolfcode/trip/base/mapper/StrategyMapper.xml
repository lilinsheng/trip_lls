<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.trip.base.mapper.StrategyMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.trip.base.domain.Strategy">
    <id column="id" property="id" />
    <result column="title" property="title" />
    <result column="subTitle" property="subTitle" />
    <result column="coverUrl" property="coverUrl" />
    <result column="state" property="state" />
    <result column="fabulousnum" property="fabulousNum"/>
      <result column="collectionnum" property="collectNum"/>
    <association property="place" javaType="region">
      <id property="id" column="r_id"/>
      <result property="name" column="r_name"/>
    </association>
    <collection property="catalogs" select="cn.wolfcode.trip.base.mapper.StrategyCatalogMapper.selectByStrategyId" column="id"></collection>
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from strategy
    where id = #{id}
  </delete>

  <!-- 删除攻略点赞关系 -->
  <delete id="deleteFabulous">
    DELETE FROM strategy_fabulous WHERE user_id=#{userId} AND strategy_id=#{strategyId}
  </delete>

  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into strategy (place_id, title, subTitle, coverUrl, state)
    values (#{place.id}, #{title}, #{subTitle}, #{coverUrl}, #{state})
  </insert>

  <!-- 保存大攻略点赞 -->
  <insert id="saveFabulous">
    INSERT INTO strategy_fabulous (user_id, strategy_id, state, createTime)
    VALUES (#{userId},#{strategyId},1,now())
  </insert>

  <!-- 保存攻略收藏的关系 -->
  <insert id="insertCollectStrategyRelation">
    INSERT INTO strategy_collect (user_id, strategy_id)
    VALUES (#{userId},#{strategyId})
  </insert>

  <update id="updateByPrimaryKey">
    update strategy
    set place_id = #{place.id},
      title = #{title},
      subTitle = #{subTitle},
      coverUrl = #{coverUrl},
      state = #{state}
    where id = #{id}
  </update>

  <!-- 攻略点赞 -->
    <update id="updateFabulousNumber">
      UPDATE strategy SET fabulousnum = fabulousnum+1
      WHERE id = #{id}
    </update>

  <!-- 取消攻略点赞 -->
  <update id="updateReductFabulousNumber">
    UPDATE strategy SET fabulousnum = fabulousnum-1
      WHERE id = #{id}
  </update>

  <!-- 攻略收藏数增加 -->
    <update id="updateAddCollectStrategy">
      UPDATE strategy SET collectionnum = collectionnum+1
      WHERE id = #{strategyId}
    </update>

    <!-- 攻略收藏数减少 -->
    <update id="updateReductCollectStrategy">
      UPDATE strategy SET collectionnum = collectionnum-1
      WHERE id = #{strategyId}
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, place_id, title, subTitle, coverUrl, state, fabulousnum,collectionnum
    from strategy
    where id = #{id}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select id, place_id, title, subTitle, coverUrl, state
    from strategy
  </select>

  <select id="selectForList" resultMap="BaseResultMap">
    select s.id, s.place_id, s.title, s.subTitle, s.coverUrl, s.state,
    r.id r_id,r.name r_name
    from strategy s JOIN region r ON s.place_id = r.id
    <where>
      <if test="keyword!=null">
        AND (s.title LIKE concat('%',#{keyword},'%') OR r.name LIKE concat('%',#{keyword},'%'))
      </if>
    </where>
  </select>

  <select id="selectStrategyByState" resultType="strategy">
    select id, place_id, title, subTitle, coverUrl, state
    from strategy
    WHERE state IN
    <foreach collection="array" open="(" separator="," close=")" item="state">
      #{state}
    </foreach>
  </select>

  <!--根据地区和状态查询-->
    <select id="selectStrategyByRegionIdAndState" resultMap="BaseResultMap">
      select id, place_id, title, subTitle, coverUrl, state
      from strategy
      <where>
        <if test="placeId!=null">
          AND place_id = #{placeId}
        </if>
        <if test="state!=null">
          AND state = #{state}
        </if>
      </where>
    </select>

    <!-- 根据攻略id查询攻略点赞数 -->
    <select id="selectFabulousByStrategy" resultType="int">
        SELECT fabulousnum FROM strategy
        WHERE id = #{id}
    </select>


  <!--查攻略-->
  <select id="getStrategiesCounts" resultMap="BaseResultMap">
    select id, place_id, title, subTitle, coverUrl, state
    from strategy
    <where>
      <if test="keyword!=null">
        AND (title LIKE CONCAT('%',#{keyword},'%') OR subTitle LIKE CONCAT('%',#{keyword},'%'))
      </if>
    </where>
  </select>

  <!-- 查询攻略的收藏数量 -->
  <select id="selectCollectStrategyNum" resultType="_int">
    SELECT collectionnum FROM strategy
    WHERE id = #{strategyId}
  </select>

  <!--查询全部攻略,并排序-->
  <select id="selectAllStrategy" resultMap="BaseResultMap">
    select id, place_id, title, subTitle, coverUrl, state
    from strategy
    <where>
      <if test="keyword!=null">
        AND (title LIKE CONCAT('%',#{keyword},'%') OR subTitle LIKE CONCAT('%',#{keyword},'%'))
      </if>
    </where>
  </select>

  <!-- 移除攻略收藏的关系 -->
    <delete id="deleteCollectStrategyRelation">
        DELETE FROM strategy_collect
        WHERE user_id=#{userId} AND strategy_id=#{strategyId}
    </delete>
</mapper>